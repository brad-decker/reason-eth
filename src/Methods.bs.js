// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Eth = require("./Eth.bs.js");
var $$Error = require("./Error.bs.js");
var Ether = require("./Ether.bs.js");
var Format = require("./Format.bs.js");
var $$Promise = require("reason-promise/src/js/promise.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");

function getRPCResult(r) {
  return r.result;
}

function requestAccounts(param) {
  Eth.assertEnv(/* () */0);
  return $$Promise.mapError($$Promise.mapOk($$Promise.Js.toResult(ethereum.send("eth_requestAccounts")), getRPCResult), $$Error.deriveJSONRPCError);
}

function gasPrice(param) {
  Eth.assertEnv(/* () */0);
  return $$Promise.mapError($$Promise.mapOk($$Promise.Js.toResult(ethereum.send("eth_gasPrice")), (function (res) {
                    return Caml_format.caml_int_of_string(res.result);
                  })), $$Error.deriveJSONRPCError);
}

function sign(account, data) {
  Eth.assertEnv(/* () */0);
  var encodedData = data[0] >= 681629164 ? data[1] : Format.Data.extractCleanString(Format.Data.encode(/* `PlainText */[
              -675635273,
              data[1]
            ]));
  return $$Promise.mapError($$Promise.mapOk($$Promise.Js.toResult(ethereum.send("eth_sign", /* tuple */[
                          account,
                          encodedData
                        ])), getRPCResult), $$Error.deriveJSONRPCError);
}

function getBalance(account, blockIdentifier) {
  Eth.assertEnv(/* () */0);
  return $$Promise.mapError($$Promise.mapOk($$Promise.Js.toResult(ethereum.send("eth_getBalance", /* tuple */[
                          account,
                          Format.BlockIdentifier.toString(blockIdentifier)
                        ])), (function (res) {
                    return Ether.fromString(res.result, /* wei */5940379);
                  })), $$Error.deriveJSONRPCError);
}

exports.getRPCResult = getRPCResult;
exports.requestAccounts = requestAccounts;
exports.gasPrice = gasPrice;
exports.sign = sign;
exports.getBalance = getBalance;
/* Eth Not a pure module */
