// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Chain = require("./Chain.bs.js");
var $$Error = require("./Error.bs.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

var isBrowser = typeof window !== "undefined";

var defaultState = {
  status: /* Disconnected */0,
  chain: /* NotConnected */6,
  isMetaMask: false
};

function assertEnv(param) {
  if (!isBrowser || Belt_Option.isNone(Caml_option.nullable_to_opt(window.ethereum))) {
    return $$Error.raiseJsExn(/* NotConnectedToProvider */12);
  } else {
    return /* () */0;
  }
}

function make(param) {
  if (isBrowser) {
    var match = window.ethereum;
    if (match == null) {
      return defaultState;
    } else {
      return {
              status: /* Connected */1,
              chain: Chain.fromId(match.chainId),
              isMetaMask: match.isMetaMask
            };
    }
  } else {
    return defaultState;
  }
}

exports.isBrowser = isBrowser;
exports.defaultState = defaultState;
exports.assertEnv = assertEnv;
exports.make = make;
/* isBrowser Not a pure module */
