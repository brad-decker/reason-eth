// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Chain from "./Chain.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as EthJS from "./bindings/EthJS.bs.js";
import * as $$Promise from "reason-promise/src/js/promise.js";

function make(param) {
  var match = EthJS.make(/* () */0);
  if (match !== undefined) {
    var eth = match;
    return {
            status: /* Connected */1,
            chain: Chain.fromId(eth.chainId),
            enable: (function (param) {
                return $$Promise.Js.toResult(Curry._1(eth.enable, /* () */0));
              }),
            isMetaMask: eth.isMetaMask
          };
  } else {
    return {
            status: /* Disconnected */0,
            chain: /* NotConnected */6,
            enable: (function (param) {
                return $$Promise.resolved(/* Ok */Block.__(0, [[]]));
              }),
            isMetaMask: false
          };
  }
}

export {
  make ,
  
}
/* EthJS Not a pure module */
